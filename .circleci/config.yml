# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

version: 2
jobs:
  test:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t mps .
      - run:
          name: Test Code
          command: docker run mps
  integrate:
    docker:
      - image: mozilla/edge-validator:1.3
    steps:
      - checkout
      - run:
          name: Checkout upstream
          command: |
            git remote add upstream git@github.com:mozilla-services/mozilla-pipeline-schemas.git
            git fetch --all
      - setup_remote_docker
      - run:
          name: Update credentials
          command: |
            # https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-shell-command
            echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Run a comparison report
          command: |
            # Get the revisions for comparison. This will compare the tip of
            # the PR against the upstream mozilla:dev.
            head_short_id=$(git rev-parse --short HEAD)
            upstream_short_id=$(git rev-parse --short upstream/dev)

            # The `checkout` step defaults to $HOME/project (/app/project).
            # Replace the container's submodule with the current state of this repo.
            cd .. && rm -r mozilla-pipeline-schemas && mv project mozilla-pipeline-schemas

            # Fetch data from an updated source
            pipenv run \
              python integration.py sync \
                --data-bucket telemetry-parquet \
                --data-prefix sanitized-landfill-sample/v3

            # Run the comparison report and store the artifacts for future viewing.
            pipenv run \
              python integration.py compare \
                --report-path test-reports \
                $upstream_short_id $head_short_id
      - store_artifacts:
          path: /app/test-reports
          destination: /app/test-results

workflows:
    version: 2
    build:
        jobs:
            - test
            - integrate
